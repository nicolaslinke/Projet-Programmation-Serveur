@model LapinCouvertMVC.ViewModels.InventaireViewModel

@{
    ViewData["Title"] = "Index";
}
<script type="text/javascript" language="javascript" src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
<script>
    $(document).ready(function () {
        let spanElements = $(".page-link");
        for (let i = 0; i < spanElements.length; i++) {
            let spanElement = spanElements[i];
            spanElement.onclick = function (evt) {
                console.log(spanElement.getAttribute("data-page-id"));
                $("#pageIndex").attr("value", spanElement.getAttribute("data-page-id"));
                $("#formSelectionPage").submit();
            }
        }
    });
</script>


<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Inventaire.FirstOrDefault().Nom)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Inventaire.FirstOrDefault().PrixVendu)
            </th>
            
            <th>
                @Html.DisplayNameFor(model => model.Inventaire.FirstOrDefault().Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Inventaire.FirstOrDefault().Quantite)
            </th>
           
            <th>
                @Html.DisplayNameFor(model => model.Inventaire.FirstOrDefault().Disponible)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Inventaire.FirstOrDefault().Categorie)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Inventaire) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nom)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PrixVendu)
            </td>
          
            <td>
                   <img src="@item.Image" alt="Image de @item.Nom" style="width:100px; height:auto;" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantite)
            </td>
        
            <td>
                @Html.DisplayFor(modelItem => item.Disponible)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Categorie)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProduitId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ProduitId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ProduitId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<form id="formSelectionPage" asp-action="ChangerPage" method="get">
    <input asp-for="SelectedPageIndex" type="hidden" id="pageIndex" class="form-control" readonly />
</form>

<div id="content-pagination">
    <nav>
        <ul class="pagination">
            @if (Model.SelectedPageIndex != 0)
            {
                <li class="page-item"><span data-page-id="@(Model.SelectedPageIndex - 1)" class="page-link">Précédent</span></li>
            }
            @for (int i = 1; i <= Model.NombrePageTotale; i++)
            {

                <li class="page-item @(i== Model.SelectedPageIndex + 1 ? "active" : " ")"><span class="page-link" data-page-id="@(i - 1)">@i</span></li>
            }
            @if (Model.SelectedPageIndex != Model.NombrePageTotale - 1)
            {
                <li class="page-item"><span class="page-link" data-page-id="@(Model.SelectedPageIndex + 1)">Suivant</span></li>
            }

        </ul>
       @*  <ul class="pagination">
            @if (Model.SelectedPageIndex != 0)
            {
                <li class="page-item"><span data-page-id="@(Model.SelectedPageIndex - 1)" class="page-link">Précédent</span></li>
            }
            @for (int i = 0; i < Model.Inventaire.Count / 3; i++)
            {
                @if (i == Model.SelectedPageIndex)
                {
                    <li class="page-item active"><span class="page-link" data-page-id="@i">@(i + 1)</span></li>
                }
                else
                {
                    <li class="page-item">
                        <span class="page-link" data-page-id="@i">@(i + 1)</span>
                    </li>
                }
            }
            @if (Model.SelectedPageIndex != Model.Inventaire.Count / 3)
            {
                <li class="page-item"><span class="page-link" data-page-id="@(Model.SelectedPageIndex + 1)">Prochain</span></li>
            }
        </ul> *@
    </nav>
</div>
